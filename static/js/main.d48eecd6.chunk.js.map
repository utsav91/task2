{"version":3,"sources":["mock/mockBills.js","features/dashboard/dashboardSlice.js","utility.js","features/dashboard/BillItem.js","features/dashboard/EditBill.js","features/dashboard/BillList.js","features/dashboard/MinimumBills.js","features/dashboard/CustomToolTip.js","features/dashboard/Chart.js","features/dashboard/Dashboard.js","App.js","features/counter/counterSlice.js","app/store.js","serviceWorker.js","index.js","logo.svg"],"names":["sleep","ms","Promise","resolve","setTimeout","delayBy","duration","a","bills","id","description","category","amount","date","getBills","sort","b","dashboardSlice","createSlice","name","initialState","loading","reducers","increment","state","value","decrement","incrementByAmount","action","payload","billsLoading","billsReceived","addBill","unshift","length","updateBill","forEach","bill","index","removeBill","splice","findIndex","updateMinimumBills","budget","shouldHighLight","actions","selectBills","dashboard","minimumBillsLength","filter","selectFilteredBillsBy","createSelector","_","filterBy","selectLoading","selectCategories","categories","Object","keys","formatDate","forChart","months","day","Date","getDate","monthIndex","getMonth","year","getFullYear","isValidText","test","formatDateForInput","dateArray","split","pop","push","join","BillItem","handleEdit","dispatch","useDispatch","className","onClick","EditBill","closeEdit","ctaLabel","useState","setBill","isDisabled","setisDisabled","error","setError","updateField","e","target","handleUpdate","checkValidation","useEffect","type","onChange","disabled","BillList","useSelector","setfilterBy","editBill","setEditBill","map","key","reduce","Number","MinimumBills","setBudget","n","CustomToolTip","props","active","label","Chart","chartData","xAxis","buildChartData","width","height","data","margin","top","right","left","bottom","dataKey","strokeDasharray","content","stroke","activeDot","r","Dashboard","response","src","logo","alt","App","counterSlice","configureStore","reducer","counter","counterReducer","dashboardReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.d48eecd6.chunk.js","sourcesContent":["function sleep(ms) {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\nasync function delayBy(duration) {\n  await sleep(duration);\n}\n\nconst bills = [\n  {\n    id: 1,\n    description: \"Dominoes\",\n    category: \"FoodNDining\",\n    amount: \"430\",\n    date: \"05-02-2020\",\n  },\n  {\n    id: 2,\n    description: \"Car wash\",\n    category: \"utility\",\n    amount: \"500\",\n    date: \"05-06-2020\",\n\n  },\n  {\n    id: 3,\n    description: \"Amazon\",\n    category: \"shopping\",\n    amount: \"2030\",\n    date: \"05-07-2020\",\n\n  },\n  {\n    id: 4,\n    description: \"House rent\",\n    category: \"Food & Dining\",\n    amount: \"35900\",\n    date: \"05-03-2020\",\n\n  },\n  {\n    id: 5,\n    description: \"Tuition\",\n    category: \"education\",\n    amount: \"2200\",\n    date: \"05-12-2020\",\n\n  },\n  {\n    id: 6,\n    description: \"Laundry\",\n    category: \"Personal Care\",\n    amount: \"320\",\n    date: \"05-14-2020\",\n\n  },\n  {\n    id: 7,\n    description: \"Vacation\",\n    category: \"Travel\",\n    amount: \"3430\",\n    date: \"05-18-2020\",\n\n  },\n  {\n    id: 8,\n    description: \"Myntra\",\n    category: \"shopping\",\n    amount: \"2030\",\n    date: \"05-07-2020\",\n\n  },\n];\n\nexport async function getBills() {\n  await delayBy(2000);\n  return bills.sort((a,b) => +b.amount - +a.amount);\n}\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { createSelector } from \"reselect\";\nimport { getBills } from \"../../mock/mockBills.js\";\n\nexport const dashboardSlice = createSlice({\n  name: \"dashboard\",\n  initialState: {\n    bills: [],\n    loading: \"idle\",\n  },\n  reducers: {\n    increment: (state) => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.value += 1;\n    },\n    decrement: (state) => {\n      state.value -= 1;\n    },\n    incrementByAmount: (state, action) => {\n      state.value += action.payload;\n    },\n    billsLoading(state, action) {\n      // Use a \"state machine\" approach for loading state instead of booleans\n      if (state.loading === \"idle\") {\n        state.loading = \"pending\";\n      }\n    },\n    billsReceived(state, action) {\n      if (state.loading === \"pending\") {\n        state.loading = \"idle\";\n        state.bills = action.payload;\n      }\n    },\n    addBill(state, action) {\n      state.bills.unshift({ id: state.bills.length + 1, ...action.payload });\n    },\n    updateBill(state, action) {\n      state.bills.forEach((bill, index) => {\n        if (bill.id === action.payload.id) state.bills[index] = action.payload;\n      });\n    },\n    removeBill(state, action) {\n      state.bills.splice(\n        state.bills.findIndex((bill) => bill.id === action.payload),\n        1\n      );\n    },\n    updateMinimumBills(state, action){\n      let budget = action.payload;\n      state.bills.forEach(bill => {\n        if(+bill.amount < +budget){\n          budget = budget - bill.amount;\n          bill.shouldHighLight = true;\n        }else {\n          bill.shouldHighLight = false;\n\n        }\n      })\n    },\n  },\n});\n\nexport const {\n  increment,\n  decrement,\n  incrementByAmount,\n  billsLoading,\n  billsReceived,\n  updateBill,\n  removeBill,\n  addBill,\n  updateMinimumBills,\n} = dashboardSlice.actions;\n\nexport const fetchBills = () => async (dispatch) => {\n  dispatch(billsLoading());\n  let response = await getBills();\n  response.forEach(bill => {\n    bill.shouldHighLight = false\n  })\n  dispatch(billsReceived(response));\n};\n\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched\nexport const incrementAsync = (amount) => (dispatch) => {\n  setTimeout(() => {\n    dispatch(incrementByAmount(amount));\n  }, 1000);\n};\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\nexport const selectBills = (state) => state.dashboard.bills;\nexport const minimumBillsLength = state => state.dashboard.bills.filter(bill => bill.shouldHighLight).length;\nexport const selectFilteredBillsBy = createSelector(\n  (state) => state.dashboard.bills,\n  (_, filterBy) => filterBy,\n  (bills, filterBy) => {\n    if (filterBy === \"ALL\") return bills;\n    return bills.filter((bill) => bill.category === filterBy);\n  }\n);\nexport const selectLoading = (state) => state.dashboard.loading;\nexport const selectCategories = (state) => {\n  let categories = {};\n  state.dashboard.bills.forEach(({ id, category }) => {\n    if (!categories[category]) {\n      categories[category] = true;\n    }\n  });\n  return Object.keys(categories);\n};\n\nexport default dashboardSlice.reducer;\n","export const formatDate = (date, forChart = false) => {\n  date = new Date(date);\n  const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\n  let day = date.getDate();\n  if (day / 10 < 1) day = `0${day}`;\n  let monthIndex = date.getMonth();\n  if (forChart) return \"\" + day + \" \" + months[monthIndex];\n  let year = date.getFullYear();\n\n  return \"\" + day + \" \" + months[monthIndex] + \" \" + year;\n};\n\nexport const buildChartData = (bills) => {\n  let clone = [...bills].map((bill) => {\n    return {\n      ...bill,\n      amount: +bill.amount,\n      xAxis: formatDate(bill.date, true),\n    };\n  });\n  return clone.sort((a, b) => new Date(a.date) - new Date(b.date));\n};\n\nexport const isValidText = (value) => {\n  const regex = /^[a-z]+$/i;\n  return regex.test(value)\n};\n\nexport const isValidNumber = (value) => {\n  const regex = /^[0-9]*$/;\n  return regex.test(+value)\n};\n\nexport const formatDateForInput = date => {\n  let dateArray = date.split('-');\n    let year = dateArray.pop();\n    if(year.length !== 4) return date;\n    let day = dateArray.pop();\n    dateArray.unshift(year)\n    dateArray.push(day)  \n  return dateArray.join('-');\n\n}\n","import React from 'react'\nimport { useDispatch } from \"react-redux\";\nimport {\n  removeBill\n} from \"./dashboardSlice\";\nimport { formatDate } from '../../utility';\n// import './Dashboard.module.css';\n\nexport function BillItem ({ id, description, category, amount, date, shouldHighLight, handleEdit }) {\n  const dispatch = useDispatch();\n\n  const handleEditClick = () => {\n    handleEdit({id ,description, category, amount, date})\n  }\n  const handleRemoveClick = () => {\n    dispatch(removeBill(id))\n  }\n\n//   const getformattedDate = (date) => {\n//     let todayTime = new Date(date);\n//     let month = todayTime .getMonth() + 1;\n//     let day = todayTime .getDate();\n//     let year = todayTime .getFullYear();\n//     return month + \"/\" + day + \"/\" + year;\n// }\n  return (\n    <div className={`b-bill-item ${shouldHighLight ? 'highlight' : ''}`}>\n      <div className=\"b-bill-item__info\">\n        <div className=\"b-bill-item__info__date\"> {formatDate(date)} </div>\n        <div className=\"b-bill-item__info__description\"> {description} </div>\n        <div className=\"b-bill-item__info__amount\"> {`₹ ${amount}`} </div>\n      </div>\n    <div className=\"b-bill-item__action\">\n      <button className=\"b-bill-item__action__item\" onClick={handleEditClick}>Edit</button>\n      <button className=\"b-bill-item__action__item\" onClick={handleRemoveClick}>Remove</button>\n    </div>\n    </div>\n  )\n}\n","import React, { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { addBill, updateBill } from \"./dashboardSlice\";\nimport { isValidText, isValidNumber, formatDateForInput } from '../../utility';\nexport const EditBill = ({ id = \"\", description = \"\", amount = \"\", date = \"\", category = \"\", closeEdit }) => {\n  const dispatch = useDispatch();\n\n  const ctaLabel = id ? \"Update\" : \"Add\";\n\n  const [bill, setBill] = useState({\n    description,\n    amount,\n    date,\n    category,\n  });\n  const [isDisabled, setisDisabled] = useState(true);\n  const [error, setError] = useState('');\n  const updateField = (e) => {    \n    setBill({\n      ...bill,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleUpdate = async () => {\n    if(checkValidation()){\n    if (id) {\n      dispatch(updateBill({ id, ...bill }));\n    } else {\n      dispatch(addBill(bill));\n    }\n  }\n  };\n  const handleCancel = () => {\n    closeEdit();\n  };\n\n  const checkValidation = () => {\n    if(!(isValidText(bill.description) || isValidText(bill.category))) {\n      setError('Description & category can contain alphabets only');\n      return false;\n    }\n    if(!(isValidNumber(bill.amount))){\n      setError('Amount can be number only');\n      return false\n    }\n    return true;\n  }\n\n  useEffect(() => {\n    if (!id && !(bill.description && bill.amount && bill.category && bill.date)) {\n      setisDisabled(true);\n    } else if (\n      description === bill.description &&\n      amount === bill.amount &&\n      category === bill.category &&\n      date === bill.date\n    ) {\n      setisDisabled(true);\n    } else {\n      setisDisabled(false);\n    }\n  }, [bill.description, bill.amount, bill.category, bill.date, id, description, amount, category, date]); //just added props to silence the linter\n  return (\n    <div className=\"b-edit-bill\">\n      <div className=\"b-edit-bill__input\">\n      <span className=\"b-edit-bill__label\">Date :</span> <input type=\"date\" value={formatDateForInput(bill.date)} name=\"date\" onChange={updateField} />\n      </div>\n      <div className=\"b-edit-bill__input\">\n        <span className=\"b-edit-bill__label\">Description :</span> <input type=\"text\" value={bill.description} name=\"description\" onChange={updateField}  />\n      </div>\n      <div className=\"b-edit-bill__input\">\n      <span className=\"b-edit-bill__label\">Amount ₹ :</span> <input value={bill.amount} name=\"amount\" onChange={updateField} />\n      </div>\n      <div className=\"b-edit-bill__input\">\n      <span className=\"b-edit-bill__label\">Category :</span> <input type=\"text\"value={bill.category} name=\"category\" onChange={updateField}  />\n      </div>\n      <div className=\"b-edit-bill__action\">\n        <button disabled={isDisabled} className={`${isDisabled ? \"disabled\" : \"\"}`} onClick={handleUpdate}>\n          {ctaLabel}\n        </button>\n        <button onClick={handleCancel}>Cancel</button>\n      </div>\n      {error && <div className=\"b-edit-bill__error\">{error}</div>}\n    </div>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { BillItem } from \"./BillItem\";\nimport { EditBill } from \"./EditBill\";\nimport { useSelector } from \"react-redux\";\nimport { selectCategories, selectFilteredBillsBy } from \"./dashboardSlice\";\nexport const BillList = () => {\n  const categories = useSelector(selectCategories);\n  const [filterBy, setfilterBy] = useState(\"ALL\");\n  const [editBill, setEditBill] = useState(null);\n\n  const bills = useSelector((state) => selectFilteredBillsBy(state, filterBy));\n\n  const monthlyAmount = (arr) => arr.reduce((a, b) => a + Number(b.amount), 0);\n  const handleChange = (e) => {\n    setfilterBy(e.target.value);\n  };\n  const handleEdit = (bill) => {\n    setEditBill(bill);\n  };\n  const handleAdd = () => {\n    setEditBill({});\n  };\n\n  const closeEdit = () => {\n    setEditBill(null);\n  };\n\n  useEffect(() => {\n    closeEdit();\n  }, [bills])\n  return (\n    <div className=\"b-bill-list\">\n      <div className=\"b-bill-list__header\">\n        <div className=\"b-bill-list__header__title\">Date</div>\n        <div className=\"b-bill-list__header__title\">Description</div>\n        <div className=\"b-bill-list__header__title\">Amount</div>\n        <div className=\"b-bill-list__header__title\">Filter by:</div>\n        <select name=\"bills\" onChange={handleChange}>\n          <option value=\"ALL\">ALL</option>\n          {categories.map((category) => (\n            <option key={category} value={category}>\n              {category}\n            </option>\n          ))}\n        </select>\n      </div>\n      <div className=\"b-bill-list__items\">\n        {bills.map((bill) => {\n          return (\n            <BillItem\n              key={bill.id}\n              id={bill.id}\n              amount={bill.amount}\n              description={bill.description}\n              date={bill.date}\n              category={bill.category}\n              shouldHighLight={bill.shouldHighLight}\n              handleEdit={handleEdit}\n            />\n          );\n        })}\n      </div>\n      {bills.length === 0 && <div className=\"b-bill-list__empty\">You have no bills in this category. Choose a different category.</div>}\n      {bills.length !== 0 && <div className=\"b-bill-list__total\">Total amount to be paid: {`₹ ${monthlyAmount(bills)}`}</div>}\n      <button className=\"b-bill-list__add\" onClick={handleAdd}>Add bill</button>\n      {editBill && (\n        <div className=\"b-bill-list__edit\">\n          <EditBill\n            id={editBill.id}\n            amount={editBill.amount}\n            description={editBill.description}\n            date={editBill.date}\n            category={editBill.category}\n            closeEdit={closeEdit}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { updateMinimumBills, removeBill, minimumBillsLength } from \"./dashboardSlice\";\n\nexport const MinimumBills = () => {\n  const [budget, setBudget] = useState(0);\n  const n = useSelector(minimumBillsLength);\n  const dispatch = useDispatch();\n  const updateBudget = (e) => {\n    setBudget(e.target.value);\n  };\n  const findMinimumBills = () => {\n    dispatch(updateMinimumBills(budget))\n  };\n  return (\n    <div className=\"b-minimum-bills\">\n      <div className=\"b-minimum-bills__input\">\n        Enter Budget : <input type=\"number\" value={budget} onChange={updateBudget} />\n        <div className=\"b-minimum-bills__subtext\">Number of funds(n) that can be paid : {n}</div>\n      </div>\n      <div className=\"b-minimum-bills__action\">\n        <button onClick={findMinimumBills}>Highlight bills</button>\n      </div>\n    </div>\n  );\n};\n","import React from 'react'\n\nexport const CustomToolTip = (props) => {\n    if (props.active) {\n      return (\n        <div className=\"custom-tooltip\">\n          <p className=\"label\">{props.label}</p>\n          <p className=\"intro\">{props.payload[0].payload.category}</p>\n          <p className=\"desc\">{props.payload[0].payload.description}</p>\n        </div>\n      );\n    }\n\n    return null;\n}\n","import React from \"react\";\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from \"recharts\";\nimport { CustomToolTip } from './CustomToolTip';\nimport { useSelector } from \"react-redux\";\nimport { selectBills } from \"./dashboardSlice\";\nimport { buildChartData } from \"../../utility\";\n\n\nexport const Chart = () => {\n  const bills = useSelector(selectBills);\n  const chartData = buildChartData(bills);  \n  return (\n      <LineChart  width={700} height={300} data={chartData} margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\n        <XAxis dataKey=\"xAxis\" />\n        <YAxis  />\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <Tooltip content={<CustomToolTip/>}/>\n        <Legend />\n        <Line type=\"monotone\" dataKey=\"amount\" stroke=\"#8884d8\" activeDot={{ r: 8 }} />\n      </LineChart>\n  );\n};\n","import React, { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { fetchBills, selectLoading } from \"./dashboardSlice\";\nimport { BillList } from \"./BillList\";\nimport { MinimumBills } from \"./MinimumBills\";\nimport { Chart } from \"./Chart\";\nimport logo from \"../../logo.svg\";\nimport \"./Dashboard.css\";\n\nexport function Dashboard() {\n  const loading = useSelector(selectLoading);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchBills());\n  }, [dispatch]);\n\n  return (\n    <div className=\"b-dashboard\">\n      {loading === \"pending\" && <img src={logo} className=\"App-logo\" alt=\"logo\" />}\n      {loading === \"idle\" && (\n        <>\n          <div>\n            <BillList />\n          </div>\n          <div className=\"b-dashboard__chart\">\n            <MinimumBills />\n            <Chart />\n          </div>\n        </>\n      )}\n    </div>\n  );\n}\n","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport { Dashboard } from './features/dashboard/Dashboard';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n        <Dashboard />        \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const counterSlice = createSlice({\r\n  name: 'counter',\r\n  initialState: {\r\n    value: 0,\r\n  },\r\n  reducers: {\r\n    increment: state => {\r\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\r\n      // doesn't actually mutate the state because it uses the Immer library,\r\n      // which detects changes to a \"draft state\" and produces a brand new\r\n      // immutable state based off those changes\r\n      state.value += 1;\r\n    },\r\n    decrement: state => {\r\n      state.value -= 1;\r\n    },\r\n    incrementByAmount: (state, action) => {\r\n      state.value += action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\r\n\r\n// console.log('counterSlice is', counterSlice);\r\n\r\n// The function below is called a thunk and allows us to perform async logic. It\r\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\r\n// will call the thunk with the `dispatch` function as the first argument. Async\r\n// code can then be executed and other actions can be dispatched\r\nexport const incrementAsync = amount => dispatch => {\r\n  setTimeout(() => {\r\n    dispatch(incrementByAmount(amount));\r\n  }, 1000);\r\n};\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\r\nexport const selectCount = state => state.counter.value;\r\n\r\nexport default counterSlice.reducer;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport counterReducer from '../features/counter/counterSlice';\r\nimport dashboardReducer from '../features/dashboard/dashboardSlice';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    counter: counterReducer,\r\n    dashboard: dashboardReducer\r\n  },\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.8dad8028.svg\";"],"sourceRoot":""}